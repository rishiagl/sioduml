# -*- coding: utf-8 -*-
"""random forest magnetometer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14QPjOoOUT-Ht6MEuema9xRX_senkBxgQ
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
import pickle

# Load the dataset
dataset_path = "/content/Data_Set_2.csv"  # Adjust this path to your dataset file
data = pd.read_csv(dataset_path, header=None)

# Split data into features (X) and target variable (y)
X = data.iloc[1:, 1:12]  # First three columns are X, Y, and Z axis readings
y = data.iloc[1:, 13]    # Fourth column is the environment label (indoor/outdoor)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train a Random Forest classifier
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)

# Make predictions on the testing set
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(y_pred)
print("Accuracy:", accuracy)

conf_matrix = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(conf_matrix)

with open('random_forest_model.pkl', 'wb') as f:
    pickle.dump(clf, f)

# Example usage: Predicting labels for new data
# new_data = [[x1, y1, z1], [x2, y2, z2], ...]  # Replace x1, y1, z1, etc. with actual sensor readings
# predicted_labels = clf.predict(new_data)